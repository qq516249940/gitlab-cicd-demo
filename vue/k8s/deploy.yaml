kind: Deployment
apiVersion: apps/v1
metadata:
  name: ${CI_PROJECT_NAME}-v1
  namespace: demo-project
  labels:
    app: ${CI_PROJECT_NAME}
    app.kubernetes.io/name: ${CI_PROJECT_NAME}
    app.kubernetes.io/version: v1
    version: v1
  annotations:
    kubesphere.io/creator: project-regular
    servicemesh.kubesphere.io/enabled: 'false'
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ${CI_PROJECT_NAME}
      app.kubernetes.io/name: ${CI_PROJECT_NAME}
      app.kubernetes.io/version: v1
      version: v1
  template:
    metadata:
      labels:
        app: ${CI_PROJECT_NAME}
        app.kubernetes.io/name: ${CI_PROJECT_NAME}
        app.kubernetes.io/version: v1
        version: v1
      annotations:
        sidecar.istio.io/inject: 'false'
    spec:
      volumes:
        - name: host-time
          hostPath:
            path: /etc/localtime
            type: ''
      containers:
        - name: ${CI_PROJECT_NAME}-container
          image: $TEST_IMAGE
          ports:
            - name: test-vue
              containerPort: 80
              protocol: TCP
          resources:
            limits:
              memory: 8000Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: host-time
              readOnly: true
              mountPath: /etc/localtime
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      imagePullSecrets:
        - name: aliyun-register  
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      affinity: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
